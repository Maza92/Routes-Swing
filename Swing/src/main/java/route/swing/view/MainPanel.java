/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package route.swing.view;

import java.awt.Color;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.net.UnknownHostException;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.DefaultListModel;
import javax.swing.JComponent;
import javax.swing.JList;
import javax.swing.JScrollPane;
import javax.swing.event.MouseInputListener;
import org.jxmapviewer.JXMapViewer;
import org.jxmapviewer.OSMTileFactoryInfo;
import org.jxmapviewer.input.PanMouseInputListener;
import org.jxmapviewer.input.ZoomMouseWheelListenerCursor;
import org.jxmapviewer.painter.CompoundPainter;
import org.jxmapviewer.painter.Painter;
import org.jxmapviewer.viewer.DefaultTileFactory;
import org.jxmapviewer.viewer.DefaultWaypoint;
import org.jxmapviewer.viewer.GeoPosition;
import org.jxmapviewer.viewer.TileFactoryInfo;
import org.jxmapviewer.viewer.WaypointPainter;
import route.swing.component.Autocompletado;
import route.swing.http.HttpClient;
import route.swing.http.HttpClientLlamaApi;
import route.swing.model.HistoryRegion;
import route.swing.model.HistoryRoute;
import route.swing.model.Route;
import route.swing.model.jxmap.Region;
import route.swing.model.jxmap.RoutingData;
import route.swing.model.user.UserVerificationResponseDto;
import route.swing.service.Haversine;
import route.swing.service.IpUbiService;
import route.swing.service.OpenStreetMapService;
import route.swing.service.RoutingService;
import route.swing.service.WheatherService;
import route.swing.util.JsonUtil;

/**
 *
 * @author Luis
 */
public class MainPanel extends javax.swing.JFrame {

    /**
     * Creates new form MainPanel
     */
    Region nowRegion;
    private List<RoutingData> routingData = new ArrayList<>();

    private List<Route> routes;

    private OpenStreetMapService mapApi;
    private IpUbiService ipApi;

    private HttpClient client;
    private JsonUtil jsonUtil;

    private UserVerificationResponseDto user;

    public MainPanel(UserVerificationResponseDto user) throws UnsupportedEncodingException, UnknownHostException, IOException {
//        setUndecorated(true);
        initComponents();
        setResizable(false);
        setLocationRelativeTo(null);
        this.user = user;

        client = new HttpClient();
        jsonUtil = new JsonUtil();

        mapApi = new OpenStreetMapService();
        ipApi = new IpUbiService();

        InicioField.setBorder(BorderFactory.createCompoundBorder(InicioField.getBorder(),
                BorderFactory.createEmptyBorder(5, 15, 5, 5)));

        DestinoField.setBorder(BorderFactory.createCompoundBorder(DestinoField.getBorder(),
                BorderFactory.createEmptyBorder(5, 15, 5, 5)));

        setForm(new MenuPanel(user));
        jXMapViewer.setBackground(Color.white);
        setupMap();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        InicioField = new javax.swing.JTextField();
        DestinoField = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        MenuPanel = new javax.swing.JPanel();
        RouteDistanceLabel = new javax.swing.JLabel();
        RouteTimeLabel = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        RouteWheaterLabel = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        RouteTimeLabel1 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        RouteDetalleRoute = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        RouteRegionInt = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jXMapViewer = new route.swing.model.jxmap.JXMapViewerCustom();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTextField1.setBackground(new java.awt.Color(255, 255, 255));
        jTextField1.setBorder(null);
        jPanel1.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 80, -1, -1));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Symbols Nerd Font Mono", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("ó±££");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 60, 50));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("Routes Project");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 0, 160, 50));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1100, 50));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("Bienvenido");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 180, 50));

        InicioField.setBackground(new java.awt.Color(255, 255, 255));
        InicioField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        InicioField.setForeground(new java.awt.Color(204, 204, 204));
        InicioField.setText("Inicio");
        InicioField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        InicioField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                InicioFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                InicioFieldFocusLost(evt);
            }
        });
        InicioField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                InicioFieldMousePressed(evt);
            }
        });
        jPanel1.add(InicioField, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 290, 50));

        DestinoField.setBackground(new java.awt.Color(255, 255, 255));
        DestinoField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        DestinoField.setForeground(new java.awt.Color(204, 204, 204));
        DestinoField.setText("Destino");
        DestinoField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        DestinoField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                DestinoFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                DestinoFieldFocusLost(evt);
            }
        });
        DestinoField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                DestinoFieldMousePressed(evt);
            }
        });
        jPanel1.add(DestinoField, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, 290, 50));

        jPanel3.setBackground(new java.awt.Color(85, 110, 230));

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Buscar");
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel4MousePressed(evt);
            }
        });

        jPanel7.setBackground(new java.awt.Color(85, 110, 230));

        jLabel8.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Buscar");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, 290, 50));

        MenuPanel.setBackground(new java.awt.Color(213, 218, 248));
        MenuPanel.setLayout(new java.awt.BorderLayout());
        jPanel1.add(MenuPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 350, 290, 410));

        RouteDistanceLabel.setText("Distance");
        RouteDistanceLabel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        RouteDistanceLabel.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(RouteDistanceLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 560, 130, 20));

        RouteTimeLabel.setText("Time");
        RouteTimeLabel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        RouteTimeLabel.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(RouteTimeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 560, 130, 20));

        jLabel6.setText("Tiempo Estimado");
        jLabel6.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 530, -1, -1));

        jLabel7.setText("Clima");
        jLabel7.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 610, -1, -1));

        RouteWheaterLabel.setText("Wheater");
        RouteWheaterLabel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        RouteWheaterLabel.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(RouteWheaterLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 640, 130, 20));

        jLabel9.setText("Transporte");
        jLabel9.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 610, -1, -1));

        RouteTimeLabel1.setText("C, A, B");
        RouteTimeLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        RouteTimeLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(RouteTimeLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 640, 130, 20));

        jLabel10.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("Detalle de ruta");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 690, -1, -1));

        RouteDetalleRoute.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        RouteDetalleRoute.setForeground(new java.awt.Color(0, 0, 0));
        RouteDetalleRoute.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        RouteDetalleRoute.setText("Description");
        RouteDetalleRoute.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jPanel1.add(RouteDetalleRoute, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 720, 700, 50));

        jLabel11.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setText("Puntos de InterÃ©s");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 530, -1, -1));

        RouteRegionInt.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        RouteRegionInt.setForeground(new java.awt.Color(0, 0, 0));
        RouteRegionInt.setText("Text");
        jPanel1.add(RouteRegionInt, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 560, 260, 140));

        jLabel12.setText("Distancia Total");
        jLabel12.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 530, -1, -1));

        javax.swing.GroupLayout jXMapViewerLayout = new javax.swing.GroupLayout(jXMapViewer);
        jXMapViewer.setLayout(jXMapViewerLayout);
        jXMapViewerLayout.setHorizontalGroup(
            jXMapViewerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 730, Short.MAX_VALUE)
        );
        jXMapViewerLayout.setVerticalGroup(
            jXMapViewerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 430, Short.MAX_VALUE)
        );

        jPanel1.add(jXMapViewer, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 70, 730, 430));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 791, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void InicioFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_InicioFieldFocusGained
        // TODO add your handling code here:
        if (InicioField.getText().equals("Inicio")) {
            InicioField.setText("");
            InicioField.setForeground(Color.black);
        }

    }//GEN-LAST:event_InicioFieldFocusGained

    private void InicioFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_InicioFieldFocusLost
        // TODO add your handling code here:
        if (InicioField.getText().equals("")) {
            InicioField.setText("Inicio");
            InicioField.setForeground(Color.decode("#CCCCCC"));
        }
    }//GEN-LAST:event_InicioFieldFocusLost

    private void DestinoFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_DestinoFieldFocusGained
        // TODO add your handling code here:
        if (DestinoField.getText().equals("Destino")) {
            DestinoField.setText("");
            DestinoField.setForeground(Color.black);
        }
    }//GEN-LAST:event_DestinoFieldFocusGained

    private void DestinoFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_DestinoFieldFocusLost
        // TODO add your handling code here:
        if (DestinoField.getText().equals("")) {
            DestinoField.setText("Destino");
            DestinoField.setForeground(Color.decode("#CCCCCC"));
        }
    }//GEN-LAST:event_DestinoFieldFocusLost


    private void jLabel4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MousePressed

        if (this.startResponse == null && this.endResponse == null) {
            return;
        }
        SaveAndGrapicRoute();
    }//GEN-LAST:event_jLabel4MousePressed

    private void InicioFieldMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_InicioFieldMousePressed
        // TODO add your handling code here:

        if (InicioField.getText().equals("Inicio")) {
            Suggestions suggestions = new Suggestions(this);
            suggestions.setStatus(false);
            suggestions.setVisible(true);
            
        }

    }//GEN-LAST:event_InicioFieldMousePressed

    private void DestinoFieldMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DestinoFieldMousePressed
        // TODO add your handling code here:
        if (DestinoField.getText().equals("Destino")) {
            Suggestions suggestions = new Suggestions(this);
            suggestions.setStatus(true);
            suggestions.setVisible(true);
        }

    }//GEN-LAST:event_DestinoFieldMousePressed

    HistoryRegion startResponse;
    HistoryRegion endResponse;

    public void SaveStartRegion(String name, String oms_id, String oms_type) throws IOException {
        this.startResponse = jsonUtil.fromJson(client.post("/api/user/region", jsonUtil.toJson(mapApi.getCoordinatesByOsmId(name, oms_id, oms_type))), HistoryRegion.class);

        if (this.startResponse != null) {
            InicioField.setForeground(Color.black);
            InicioField.setText(name);
        } else {
            System.out.println("error");
        }
    }

    public void SaveEndRegion(String name, String oms_id, String oms_type) throws IOException {
        this.endResponse = jsonUtil.fromJson(client.post("/api/user/region", jsonUtil.toJson(mapApi.getCoordinatesByOsmId(name, oms_id, oms_type))), HistoryRegion.class);
        if (this.endResponse != null) {
            DestinoField.setForeground(Color.black);
            DestinoField.setText(name);
        }
    }

    public String getStartRegion() {
        return InicioField.getText();
    }

    public String getEndRegion() {
        return DestinoField.getText();
    }

    public void SaveAndGrapicRoute() {

        try {

            HistoryRoute routeC = null;
            if (this.startResponse == null && this.endResponse == null) {
                return;
            }

            routeC = new HistoryRoute(
                    this.startResponse,
                    this.endResponse
            );

            Route route = toRoute(jsonUtil.fromJson(client.post("/api/user/" + user.getId() + "/route", jsonUtil.toJson(routeC)), HistoryRoute.class));

            if (route != null) {
                RouteLoadMap(route);
            }

            setForm(new RoutePanel(this));
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(MainPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MainPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void RouteLoadMap(Route route) throws IOException, IOException {
        graphicRouteInPanel(route);
        dataSet(route);
    }

    public void dataSet(Route route) throws IOException {
        double distance = Haversine.round(Haversine.calculateDistance(
                route.getStart().getLatitud(),
                route.getStart().getLongitud(),
                route.getEnd().getLatitud(),
                route.getEnd().getLongitud()
        ));

        RouteDistanceLabel.setText(
                String.valueOf(distance)
                + " km"
        );

        RouteTimeLabel.setText(Haversine.calcTime(distance, 20));

        RouteWheaterLabel.setText(String.valueOf(new WheatherService().getActualTemp()) + " Â°");

        RouteDetalleRoute.setText(
                "<html>"
                + HttpClientLlamaApi.sendPrompt("Simula una descripcion generica muy corta sobre esta ruta de PerÃº sobre su dificultad teniendo en cuenta el trafico general de PerÃº y si se puede llegar a tener un incoveniente o algo por el estilo, la ruta que te doy se compone de un codigo (no hace falta que menciones el codigo ni los lugares), un lugar de inicio y un lugar de fin, dame solo la descripcion, esta es la ruta: "
                        + route.toString()).replaceAll("^\"|\"$", "")
                + "</html>"
        );
        RouteRegionInt.setText("<html>" + HttpClientLlamaApi.sendPrompt("Simula los puntos de interes que hay en esta ruta (" + route.toString() + "), simulalo de manera general, y retornalo en un muy pequeÃ±o parrado, de una linea maximo, solo retorna eso y nada mas, la ruta es de PerÃº") + "</html>");
    }

    private Route toRoute(HistoryRoute routeH) {
        Route route = new Route();
        route.setId(routeH.getId());
        route.setName(route.getName());
        route.setStart(toRegion(routeH.getStart()));
        route.setEnd(toRegion(routeH.getEnd()));

        return route;
    }

    private Region toRegion(HistoryRegion regionh) {
        Region region = new Region();
        region.setId(regionh.getId());
        region.setName(regionh.getName());
        region.setLatitud(regionh.getLatitud());
        region.setLongitud(regionh.getLongitud());
        return region;
    }

    public void graphicRouteInPanel(Route route) {
        setupMap();
        drawWaypoints(route);
        drawRoute(route);
        addInteractivity();
        centerMap(route);
    }

    private void setupMap() {
        TileFactoryInfo info = new OSMTileFactoryInfo();
        DefaultTileFactory tileFactory = new DefaultTileFactory(info);
        jXMapViewer.setTileFactory(tileFactory);
        tileFactory.setThreadPoolSize(8);
    }

    private void drawWaypoints(Route route) {
        List<GeoPosition> waypointPositions = new ArrayList<>();
        waypointPositions.add(new GeoPosition(route.getStart().getLatitud(), route.getStart().getLongitud()));
        waypointPositions.add(new GeoPosition(route.getEnd().getLatitud(), route.getEnd().getLongitud()));

        List<DefaultWaypoint> waypoints = new ArrayList<>();
        for (GeoPosition position : waypointPositions) {
            waypoints.add(new DefaultWaypoint(position));
        }

        WaypointPainter<DefaultWaypoint> waypointPainter = new WaypointPainter<>();
        waypointPainter.setWaypoints(new HashSet<>(waypoints));

        List<Painter<JXMapViewer>> painters = new ArrayList<>();
        painters.add(waypointPainter);

        CompoundPainter<JXMapViewer> painter = new CompoundPainter<>(painters);
        jXMapViewer.setOverlayPainter(painter);
    }

    private void drawRoute(Route route) {
        routingData = RoutingService.getInstance().routing(
                route.getStart().getLatitud(), route.getStart().getLongitud(),
                route.getEnd().getLatitud(), route.getEnd().getLongitud()
        );
        jXMapViewer.setRoutingData(routingData);
    }

    private void addInteractivity() {
        MouseInputListener mia = new PanMouseInputListener(jXMapViewer);
        jXMapViewer.addMouseListener(mia);
        jXMapViewer.addMouseMotionListener(mia);
        jXMapViewer.addMouseWheelListener(new ZoomMouseWheelListenerCursor(jXMapViewer));
    }

    private void centerMap(Route route) {
        Region result = middlePoint(route.getStart(), route.getEnd());
        jXMapViewer.setZoom(8);
        jXMapViewer.setAddressLocation(new GeoPosition(result.getLatitud(), result.getLongitud()));
    }

// Ejemplo de uso para dibujar solo un waypoint en el mapa
    private void drawSingleWaypoint(double lat, double lon) {
        List<GeoPosition> waypointPositions = new ArrayList<>();
        waypointPositions.add(new GeoPosition(lat, lon));

        List<DefaultWaypoint> waypoints = new ArrayList<>();
        for (GeoPosition position : waypointPositions) {
            waypoints.add(new DefaultWaypoint(position));
        }

        WaypointPainter<DefaultWaypoint> waypointPainter = new WaypointPainter<>();
        waypointPainter.setWaypoints(new HashSet<>(waypoints));

        List<Painter<JXMapViewer>> painters = new ArrayList<>();
        painters.add(waypointPainter);

        CompoundPainter<JXMapViewer> painter = new CompoundPainter<>(painters);
        jXMapViewer.setOverlayPainter(painter);

        jXMapViewer.setZoom(8);
        jXMapViewer.setAddressLocation(new GeoPosition(lat, lon));
    }

    private Region middlePoint(Region zone1, Region zone2) {
        double latMedia = (zone1.getLatitud() + zone2.getLatitud()) / 2;
        double lonMedia = (zone1.getLongitud() + zone2.getLongitud()) / 2;
        return new Region("medio", latMedia, lonMedia);
    }

    public UserVerificationResponseDto getUser() {
        return user;
    }

    /**
     * @param args the command line arguments
     */
 

    public void setForm(JComponent com) {
        MenuPanel.removeAll();
        MenuPanel.add(com);
        MenuPanel.repaint();
        MenuPanel.revalidate();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField DestinoField;
    private javax.swing.JTextField InicioField;
    private javax.swing.JPanel MenuPanel;
    private javax.swing.JLabel RouteDetalleRoute;
    private javax.swing.JLabel RouteDistanceLabel;
    private javax.swing.JLabel RouteRegionInt;
    private javax.swing.JLabel RouteTimeLabel;
    private javax.swing.JLabel RouteTimeLabel1;
    private javax.swing.JLabel RouteWheaterLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JTextField jTextField1;
    private route.swing.model.jxmap.JXMapViewerCustom jXMapViewer;
    // End of variables declaration//GEN-END:variables
}
